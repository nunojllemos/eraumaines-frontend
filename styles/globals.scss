// @tailwind components;
@tailwind base;
@tailwind utilities;

@import '/styles/normalize';
@import '/styles/utils';

$black: #1c1c1c;
$red: #ff0000;
$easing: cubic-bezier(0.19, 1, 0.22, 1);
$duration: 250ms;
$transition: $easing $duration;

@font-face {
    font-family: 'Maginia';
    font-weight: 400;
    src: url('/fonts/Maginia.woff2') format('woff2');
}

@font-face {
    font-family: 'Power Grotesk';
    font-weight: 400;
    src: url('/fonts/PowerGrotesk-Regular.woff2') format('woff2'), url('/fonts/PowerGrotesk-Regular.woff') format('woff');
}

@font-face {
    font-family: 'Subjectivity';
    font-weight: 300;
    src: url('/fonts/Subjectivity-Light.woff2') format('woff2');
}

@font-face {
    font-family: 'Subjectivity';
    font-weight: 400;
    src: url('/fonts/Subjectivity-Regular.woff2') format('woff2');
}

@font-face {
    font-family: 'Subjectivity';
    font-weight: 500;
    src: url('/fonts/Subjectivity-Medium.woff2') format('woff2');
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    transition-timing-function: $easing;
}

html {
    scroll-behavior: smooth;
    font-size: 10px;
}

body {
    font-family: 'Subjectivity';
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overscroll-behavior-y: none;
}

button {
    cursor: pointer;
}

a {
    text-decoration: none;
    color: currentColor;
}

li {
    list-style: none;
}

input {
    border-radius: 0;
}

input[type='search'] {
    -webkit-appearance: none;
}

.headroom {
    position: fixed !important;
    transition: all $easing 350ms !important;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1;
}
.headroom--unfixed {
    position: relative;
    transform: translateY(0);

    header {
        .contact-button {
            background-color: $black;
            color: #fff;

            &.is-home {
                background-color: #fff;
                color: $black;
            }
        }
    }
}

.headroom--scrolled {
    transition: transform 200ms ease-in-out;
}

.headroom--unpinned {
    position: fixed;
    transform: translateY(-100%);
}

.headroom--pinned {
    position: fixed;
    transform: translateY(0%);
    background-color: rgba(255, 255, 255, 0.95);

    header {
        color: $black;
        box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.15);

        .contact-button {
            background-color: $black;
            color: #fff;
        }
    }
}

.default-text {
    font-size: 2rem;

    @include min-768 {
        font-size: 2.2rem;
    }

    @include min-1280 {
        font-size: 2.6rem;
    }
}

.animated-title-container {
    //     margin-block: 10rem;

    &::after,
    &::before {
        content: '';
        display: block;
        width: calc(100% - 20px);
        margin-left: 10px;
        height: 1px;
        background-color: $black;

        @include min-768 {
            width: calc(100% - 40px);
            margin-left: 20px;
        }
    }
}

.page-layout {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
}

.Collapsible {
    border-bottom: 1px solid $black;
    .Collapsible__trigger {
        h2 {
            transition: opacity $transition !important;
        }
    }
    @include hover {
        .Collapsible__trigger {
            h2 {
                opacity: 0.5;
            }
        }
    }
}

.hamburger {
    span {
        display: block;
        height: 2px;
        background-color: currentColor;
        margin-bottom: 10px;
        border-radius: 4px;
        transition: $transition;

        &.is-open {
            background-color: #fff;
        }

        &:nth-child(1),
        &:nth-child(3) {
            animation-duration: $duration * 2;
            animation-fill-mode: forwards;

            &:not(.is-open) {
                width: 72%;
            }
        }

        &:nth-child(1) {
            animation-name: animate-reverse-hamburger-bar-1;

            &.is-open {
                animation-name: animate-hamburger-bar-1;
            }
        }

        &:nth-child(2) {
            transition: opacity $transition $duration, background-color $transition 0ms;

            &.is-open {
                opacity: 0;
            }
        }

        &:nth-child(3) {
            &:not(.is-open) {
                animation-name: animate-reverse-hamburger-bar-3;
                margin-left: auto;
            }

            &.is-open {
                animation-name: animate-hamburger-bar-3;
            }
        }
    }
}

@keyframes animate-hamburger-bar-3 {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-12px);
    }
    100% {
        width: 100%;
        transform: translateY(-12px) rotate(45deg);
    }
}
@keyframes animate-reverse-hamburger-bar-3 {
    0% {
        transform: translateY(-12px) rotate(45deg);
        width: 72%;
    }
    50% {
        transform: translateY(-12px);
    }
    100% {
        transform: translateY(0px) rotate(0deg);
    }
}
@keyframes animate-hamburger-bar-1 {
    0% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(12px);
    }
    100% {
        width: 100%;
        transform: translateY(12px) rotate(-45deg);
    }
}
@keyframes animate-reverse-hamburger-bar-1 {
    0% {
        transform: translateY(12px) rotate(-45deg);
        width: 72%;
    }
    50% {
        transform: translateY(12px);
    }
    100% {
        transform: translateY(0px) rotate(0deg);
    }
}

.terms-content {
    @media only screen and (max-width: 800px) {
        margin-top: 4rem;
    }

    h2 {
        @apply default-text;
        margin-bottom: 2rem;
    }

    p {
        font-size: 1.6rem;
        margin-bottom: 1em;
        line-height: 1.45;

        @include min-991 {
            font-size: 1.8rem;
        }

        & + h2 {
            margin-top: 4rem;
        }
    }
}

.hover-menu {
    position: relative;

    &:before {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        height: 2px;
        width: 100%;
        background-color: currentColor;
        transform-origin: right;
        transform: scaleX(0);
        transition: transform $easing 350ms;
    }

    @include hover {
        &:before {
            transform-origin: left;
            transform: scaleX(1);
        }
    }
}

.hover-button:hover {
    background: $black !important;
    color: #fff !important;
}

.hover-mute {
    transition: $transition;

    @include hover {
        background: $black;
        color: white;
    }
}

.hover-arrow:hover div {
    rotate: -45deg;
    transform: translateY(10px);
    transform: translateX(10px);
    transform: $transition;
    transform: $duration;
}
.ellipsis-text {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

.social-link {
    svg {
        width: 100%;
        height: 100%;
    }
}
